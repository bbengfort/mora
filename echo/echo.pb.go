// Code generated by protoc-gen-go.
// source: echo.proto
// DO NOT EDIT!

/*
Package echo is a generated protocol buffer package.

It is generated from these files:
	echo.proto

It has these top-level messages:
	Node
	Echo
	EchoReply
*/
package echo

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// const _ = proto.ProtoPackageIsVersion1

type Node struct {
	Name             *string `protobuf:"bytes,1,req,name=name" json:"name,omitempty"`
	Address          *string `protobuf:"bytes,2,req,name=address" json:"address,omitempty"`
	Dns              *string `protobuf:"bytes,3,opt,name=dns" json:"dns,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *Node) Reset()                    { *m = Node{} }
func (m *Node) String() string            { return proto.CompactTextString(m) }
func (*Node) ProtoMessage()               {}
func (*Node) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Node) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *Node) GetAddress() string {
	if m != nil && m.Address != nil {
		return *m.Address
	}
	return ""
}

func (m *Node) GetDns() string {
	if m != nil && m.Dns != nil {
		return *m.Dns
	}
	return ""
}

type Echo struct {
	Source           *Node  `protobuf:"bytes,1,req,name=source" json:"source,omitempty"`
	Target           *Node  `protobuf:"bytes,2,req,name=target" json:"target,omitempty"`
	Sent             *int64 `protobuf:"varint,3,req,name=sent" json:"sent,omitempty"`
	Payload          []byte `protobuf:"bytes,15,opt,name=payload" json:"payload,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *Echo) Reset()                    { *m = Echo{} }
func (m *Echo) String() string            { return proto.CompactTextString(m) }
func (*Echo) ProtoMessage()               {}
func (*Echo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Echo) GetSource() *Node {
	if m != nil {
		return m.Source
	}
	return nil
}

func (m *Echo) GetTarget() *Node {
	if m != nil {
		return m.Target
	}
	return nil
}

func (m *Echo) GetSent() int64 {
	if m != nil && m.Sent != nil {
		return *m.Sent
	}
	return 0
}

func (m *Echo) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

type EchoReply struct {
	Receiver         *Node  `protobuf:"bytes,1,req,name=receiver" json:"receiver,omitempty"`
	Received         *int64 `protobuf:"varint,2,req,name=received" json:"received,omitempty"`
	Echo             *Echo  `protobuf:"bytes,3,req,name=echo" json:"echo,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *EchoReply) Reset()                    { *m = EchoReply{} }
func (m *EchoReply) String() string            { return proto.CompactTextString(m) }
func (*EchoReply) ProtoMessage()               {}
func (*EchoReply) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *EchoReply) GetReceiver() *Node {
	if m != nil {
		return m.Receiver
	}
	return nil
}

func (m *EchoReply) GetReceived() int64 {
	if m != nil && m.Received != nil {
		return *m.Received
	}
	return 0
}

func (m *EchoReply) GetEcho() *Echo {
	if m != nil {
		return m.Echo
	}
	return nil
}

func init() {
	proto.RegisterType((*Node)(nil), "echo.Node")
	proto.RegisterType((*Echo)(nil), "echo.Echo")
	proto.RegisterType((*EchoReply)(nil), "echo.EchoReply")
}

var fileDescriptor0 = []byte{
	// 191 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x6c, 0xcf, 0xb1, 0xca, 0xc2, 0x30,
	0x14, 0x05, 0x60, 0xda, 0x84, 0xff, 0xb7, 0xb7, 0x85, 0x4a, 0xa6, 0x20, 0x0e, 0xa5, 0x53, 0xa7,
	0x0e, 0x7d, 0x07, 0x57, 0x07, 0xc1, 0xd1, 0x21, 0x34, 0x17, 0x15, 0x6a, 0x13, 0x92, 0x28, 0xf4,
	0xed, 0x4d, 0xae, 0x50, 0x10, 0xdc, 0x42, 0x4e, 0xce, 0x77, 0x08, 0x00, 0x8e, 0x37, 0xd3, 0x5b,
	0x67, 0x82, 0x11, 0x3c, 0x9d, 0xdb, 0x01, 0xf8, 0xd1, 0x68, 0x14, 0x15, 0xf0, 0x59, 0x3d, 0x50,
	0x66, 0x4d, 0xde, 0x15, 0xa2, 0x86, 0x7f, 0xa5, 0xb5, 0x43, 0xef, 0x65, 0x4e, 0x17, 0x25, 0x30,
	0x3d, 0x7b, 0xc9, 0x9a, 0xac, 0x2b, 0xda, 0x0b, 0xf0, 0x43, 0xec, 0x8a, 0x1d, 0xfc, 0x79, 0xf3,
	0x74, 0xe3, 0xa7, 0x55, 0x0e, 0xd0, 0x13, 0x4f, 0x5e, 0xcc, 0x82, 0x72, 0x57, 0x0c, 0x04, 0x7c,
	0x67, 0x71, 0xcb, 0xe3, 0x1c, 0xa2, 0x96, 0x77, 0x2c, 0x6d, 0x59, 0xb5, 0x4c, 0x46, 0x69, 0x59,
	0x47, 0xbe, 0x6a, 0xcf, 0x50, 0x24, 0xfe, 0x84, 0x76, 0x5a, 0xc4, 0x1e, 0x36, 0x0e, 0x47, 0xbc,
	0xbf, 0xd0, 0xfd, 0x58, 0xd9, 0xae, 0xa9, 0xa6, 0x1d, 0x26, 0x24, 0xd0, 0xbf, 0xc8, 0x5e, 0xdf,
	0x26, 0xee, 0x1d, 0x00, 0x00, 0xff, 0xff, 0x58, 0xaf, 0x1c, 0x19, 0xfc, 0x00, 0x00, 0x00,
}
